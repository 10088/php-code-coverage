<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.5.0@b63061a27f2683ec0f3509012bb22daab3b65b61">
  <file src="src/CodeCoverage.php">
    <ArgumentTypeCoercion>
      <code>$tmp[0]</code>
    </ArgumentTypeCoercion>
    <RedundantCondition>
      <code>$class-&gt;isSubclassOf($parentClass)</code>
      <code>is_array($linesToBeCovered)</code>
    </RedundantCondition>
  </file>
  <file src="src/Data/ProcessedCodeCoverageData.php">
    <PossiblyNullArgument>
      <code>$this-&gt;functionCoverage[$file][$functionName]['branches'][$branchId]['hit']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code>$this-&gt;functionCoverage[$file][$functionName]['branches']</code>
      <code>$this-&gt;functionCoverage[$file][$functionName]['branches'][$branchId]</code>
      <code>$this-&gt;functionCoverage[$file][$functionName]['branches'][$branchId]['hit']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayAssignment>
      <code>$this-&gt;functionCoverage[$file][$functionName]['branches']</code>
    </PossiblyNullArrayAssignment>
  </file>
  <file src="src/Driver/PcovDriver.php">
    <UndefinedConstant>
      <code>inclusive</code>
    </UndefinedConstant>
    <UndefinedFunction>
      <code>clear()</code>
      <code>collect(inclusive, $filesToCollectCoverageFor)</code>
      <code>start()</code>
      <code>stop()</code>
      <code>waiting()</code>
    </UndefinedFunction>
  </file>
  <file src="src/Driver/XdebugDriver.php">
    <UndefinedConstant>
      <code>XDEBUG_CC_BRANCH_CHECK</code>
      <code>XDEBUG_CC_DEAD_CODE</code>
      <code>XDEBUG_CC_UNUSED</code>
      <code>XDEBUG_FILTER_CODE_COVERAGE</code>
      <code>XDEBUG_PATH_INCLUDE</code>
    </UndefinedConstant>
  </file>
  <file src="src/Filter.php">
    <InvalidDocblockParamName>
      <code>$files</code>
    </InvalidDocblockParamName>
  </file>
  <file src="src/Node/Builder.php">
    <UnsupportedReferenceUsage>
      <code>$pointer = &amp;$pointer[$path[$i] . $type]</code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="src/Node/Directory.php">
    <InvalidPropertyAssignmentValue>
      <code>$this-&gt;directories</code>
      <code>$this-&gt;files</code>
    </InvalidPropertyAssignmentValue>
    <MissingTemplateParam>
      <code>IteratorAggregate</code>
    </MissingTemplateParam>
    <UnsupportedReferenceUsage>
      <code>$this-&gt;directories[] = &amp;$this-&gt;children[count($this-&gt;children) - 1]</code>
      <code>$this-&gt;files[]    = &amp;$this-&gt;children[count($this-&gt;children) - 1]</code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="src/Node/File.php">
    <InvalidPropertyAssignmentValue>
      <code>$this-&gt;codeUnitsByLine</code>
      <code>$this-&gt;codeUnitsByLine</code>
      <code>$this-&gt;codeUnitsByLine</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="src/Node/Iterator.php">
    <ArgumentTypeCoercion>
      <code>$this-&gt;nodes[$this-&gt;position]</code>
    </ArgumentTypeCoercion>
    <MissingTemplateParam>
      <code>RecursiveIterator</code>
    </MissingTemplateParam>
    <PropertyNotSetInConstructor>
      <code>$position</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code>$node-&gt;children()</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Report/Html/Renderer.php">
    <InvalidArgument>
      <code>[
                'id'               =&gt; $node-&gt;id(),
                'full_path'        =&gt; $node-&gt;pathAsString(),
                'path_to_root'     =&gt; $this-&gt;pathToRoot($node),
                'breadcrumbs'      =&gt; $this-&gt;breadcrumbs($node),
                'date'             =&gt; $this-&gt;date,
                'version'          =&gt; $this-&gt;version,
                'runtime'          =&gt; $this-&gt;runtimeString(),
                'generator'        =&gt; $this-&gt;generator,
                'low_upper_bound'  =&gt; $this-&gt;thresholds-&gt;lowUpperBound(),
                'high_lower_bound' =&gt; $this-&gt;thresholds-&gt;highLowerBound(),
            ]</code>
    </InvalidArgument>
    <PossiblyUndefinedArrayOffset>
      <code>$data['branchesExecutedPercentAsString']</code>
      <code>$data['linesExecutedPercentAsString']</code>
      <code>$data['pathsExecutedPercentAsString']</code>
      <code>$data['testedMethodsPercentAsString']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/Report/Html/Renderer/File.php">
    <InvalidArgument>
      <code>[
                'lineNumber'  =&gt; $lineNumber,
                'lineContent' =&gt; $lineContent,
                'class'       =&gt; $class,
                'popover'     =&gt; $popover,
            ]</code>
    </InvalidArgument>
    <InvalidArrayOffset>
      <code>$tokens[$j - 1]</code>
    </InvalidArrayOffset>
  </file>
  <file src="src/Report/Xml/BuildInformation.php">
    <PossiblyNullReference>
      <code>createElementNS</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Report/Xml/Coverage.php">
    <PossiblyNullReference>
      <code>createDocumentFragment</code>
      <code>replaceChild</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Report/Xml/Facade.php">
    <PropertyNotSetInConstructor>
      <code>$project</code>
      <code>$target</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Report/Xml/File.php">
    <ArgumentTypeCoercion>
      <code>$totalsContainer</code>
    </ArgumentTypeCoercion>
    <PossiblyNullPropertyAssignmentValue>
      <code>$context-&gt;ownerDocument</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Report/Xml/Node.php">
    <ArgumentTypeCoercion>
      <code>$totalsContainer</code>
    </ArgumentTypeCoercion>
    <PossiblyNullPropertyAssignmentValue>
      <code>$context-&gt;ownerDocument</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor>
      <code>$contextNode</code>
      <code>$dom</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Report/Xml/Report.php">
    <MissingParamType>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
      <code>$name</code>
    </MissingParamType>
  </file>
  <file src="src/Report/Xml/Source.php">
    <PossiblyNullArgument>
      <code>$context-&gt;namespaceURI</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>importNode</code>
      <code>replaceChild</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Report/Xml/Tests.php">
    <PossiblyNullReference>
      <code>createElementNS</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Report/Xml/Totals.php">
    <PossiblyNullReference>
      <code>createElementNS</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Report/Xml/Unit.php">
    <PossiblyNullReference>
      <code>createElementNS</code>
      <code>createElementNS</code>
    </PossiblyNullReference>
  </file>
  <file src="src/StaticAnalysis/CachingFileAnalyser.php">
    <NullableReturnStatement>
      <code>$this-&gt;cache[$filename]['classesIn']</code>
      <code>$this-&gt;cache[$filename]['executableLinesIn']</code>
      <code>$this-&gt;cache[$filename]['functionsIn']</code>
      <code>$this-&gt;cache[$filename]['ignoredLinesFor']</code>
      <code>$this-&gt;cache[$filename]['linesOfCodeFor']</code>
      <code>$this-&gt;cache[$filename]['traitsIn']</code>
    </NullableReturnStatement>
    <PossiblyNullArrayAccess>
      <code>$this-&gt;cache[$filename]['classesIn']</code>
      <code>$this-&gt;cache[$filename]['executableLinesIn']</code>
      <code>$this-&gt;cache[$filename]['functionsIn']</code>
      <code>$this-&gt;cache[$filename]['ignoredLinesFor']</code>
      <code>$this-&gt;cache[$filename]['linesOfCodeFor']</code>
      <code>$this-&gt;cache[$filename]['traitsIn']</code>
    </PossiblyNullArrayAccess>
    <PossiblyUndefinedArrayOffset>
      <code>$this-&gt;cache[$filename]</code>
      <code>$this-&gt;cache[$filename]</code>
      <code>$this-&gt;cache[$filename]</code>
      <code>$this-&gt;cache[$filename]</code>
      <code>$this-&gt;cache[$filename]</code>
      <code>$this-&gt;cache[$filename]</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="src/StaticAnalysis/CodeUnitFindingVisitor.php">
    <PossiblyInvalidOperand>
      <code>$parameter-&gt;var-&gt;name</code>
    </PossiblyInvalidOperand>
    <PossiblyNullReference>
      <code>toString</code>
      <code>toString</code>
      <code>toString</code>
      <code>toString</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod>
      <code>toString</code>
    </PossiblyUndefinedMethod>
    <RedundantConditionGivenDocblockType>
      <code>assert($node-&gt;namespacedName instanceof Name)</code>
      <code>assert($node-&gt;namespacedName instanceof Name)</code>
      <code>assert($parentNode-&gt;namespacedName instanceof Name)</code>
      <code>assert(isset($node-&gt;name))</code>
      <code>assert(isset($node-&gt;namespacedName))</code>
      <code>assert(isset($parameter-&gt;var-&gt;name))</code>
    </RedundantConditionGivenDocblockType>
  </file>
</files>
